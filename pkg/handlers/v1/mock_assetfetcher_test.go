// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/ipam-facade/pkg/domain (interfaces: PhysicalAssetFetcher)

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	domain "github.com/asecurityteam/ipam-facade/pkg/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPhysicalAssetFetcher is a mock of PhysicalAssetFetcher interface
type MockPhysicalAssetFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockPhysicalAssetFetcherMockRecorder
}

// MockPhysicalAssetFetcherMockRecorder is the mock recorder for MockPhysicalAssetFetcher
type MockPhysicalAssetFetcherMockRecorder struct {
	mock *MockPhysicalAssetFetcher
}

// NewMockPhysicalAssetFetcher creates a new mock instance
func NewMockPhysicalAssetFetcher(ctrl *gomock.Controller) *MockPhysicalAssetFetcher {
	mock := &MockPhysicalAssetFetcher{ctrl: ctrl}
	mock.recorder = &MockPhysicalAssetFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPhysicalAssetFetcher) EXPECT() *MockPhysicalAssetFetcherMockRecorder {
	return m.recorder
}

// FetchPhysicalAsset mocks base method
func (m *MockPhysicalAssetFetcher) FetchPhysicalAsset(arg0 context.Context, arg1 string) (domain.PhysicalAsset, error) {
	ret := m.ctrl.Call(m, "FetchPhysicalAsset", arg0, arg1)
	ret0, _ := ret[0].(domain.PhysicalAsset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchPhysicalAsset indicates an expected call of FetchPhysicalAsset
func (mr *MockPhysicalAssetFetcherMockRecorder) FetchPhysicalAsset(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchPhysicalAsset", reflect.TypeOf((*MockPhysicalAssetFetcher)(nil).FetchPhysicalAsset), arg0, arg1)
}
