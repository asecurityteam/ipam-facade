// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/ipam-facade/pkg/domain (interfaces: IPAMDataFetcher)

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	domain "github.com/asecurityteam/ipam-facade/pkg/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIPAMDataFetcher is a mock of IPAMDataFetcher interface
type MockIPAMDataFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockIPAMDataFetcherMockRecorder
}

// MockIPAMDataFetcherMockRecorder is the mock recorder for MockIPAMDataFetcher
type MockIPAMDataFetcherMockRecorder struct {
	mock *MockIPAMDataFetcher
}

// NewMockIPAMDataFetcher creates a new mock instance
func NewMockIPAMDataFetcher(ctrl *gomock.Controller) *MockIPAMDataFetcher {
	mock := &MockIPAMDataFetcher{ctrl: ctrl}
	mock.recorder = &MockIPAMDataFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPAMDataFetcher) EXPECT() *MockIPAMDataFetcherMockRecorder {
	return m.recorder
}

// FetchIPAMData mocks base method
func (m *MockIPAMDataFetcher) FetchIPAMData(arg0 context.Context) (domain.IPAMData, error) {
	ret := m.ctrl.Call(m, "FetchIPAMData", arg0)
	ret0, _ := ret[0].(domain.IPAMData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchIPAMData indicates an expected call of FetchIPAMData
func (mr *MockIPAMDataFetcherMockRecorder) FetchIPAMData(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchIPAMData", reflect.TypeOf((*MockIPAMDataFetcher)(nil).FetchIPAMData), arg0)
}
