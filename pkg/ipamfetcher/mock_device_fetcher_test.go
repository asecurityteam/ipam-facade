// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/ipam-facade/pkg/ipamfetcher (interfaces: DeviceFetcher)

// Package ipamfetcher is a generated GoMock package.
package ipamfetcher

import (
	context "context"
	reflect "reflect"

	domain "github.com/asecurityteam/ipam-facade/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockDeviceFetcher is a mock of DeviceFetcher interface
type MockDeviceFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceFetcherMockRecorder
}

// MockDeviceFetcherMockRecorder is the mock recorder for MockDeviceFetcher
type MockDeviceFetcherMockRecorder struct {
	mock *MockDeviceFetcher
}

// NewMockDeviceFetcher creates a new mock instance
func NewMockDeviceFetcher(ctrl *gomock.Controller) *MockDeviceFetcher {
	mock := &MockDeviceFetcher{ctrl: ctrl}
	mock.recorder = &MockDeviceFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDeviceFetcher) EXPECT() *MockDeviceFetcherMockRecorder {
	return m.recorder
}

// FetchDevices mocks base method
func (m *MockDeviceFetcher) FetchDevices(arg0 context.Context) ([]domain.Device, error) {
	ret := m.ctrl.Call(m, "FetchDevices", arg0)
	ret0, _ := ret[0].([]domain.Device)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchDevices indicates an expected call of FetchDevices
func (mr *MockDeviceFetcherMockRecorder) FetchDevices(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchDevices", reflect.TypeOf((*MockDeviceFetcher)(nil).FetchDevices), arg0)
}
