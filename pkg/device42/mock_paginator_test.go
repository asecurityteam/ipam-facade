// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asecurityteam/ipam-facade/pkg/device42 (interfaces: Paginator)

// Package device42 is a generated GoMock package.
package device42

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPaginator is a mock of Paginator interface
type MockPaginator struct {
	ctrl     *gomock.Controller
	recorder *MockPaginatorMockRecorder
}

// MockPaginatorMockRecorder is the mock recorder for MockPaginator
type MockPaginatorMockRecorder struct {
	mock *MockPaginator
}

// NewMockPaginator creates a new mock instance
func NewMockPaginator(ctrl *gomock.Controller) *MockPaginator {
	mock := &MockPaginator{ctrl: ctrl}
	mock.recorder = &MockPaginatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPaginator) EXPECT() *MockPaginatorMockRecorder {
	return m.recorder
}

// BatchPagedRequests mocks base method
func (m *MockPaginator) BatchPagedRequests(arg0 context.Context) ([][]byte, error) {
	ret := m.ctrl.Call(m, "BatchPagedRequests", arg0)
	ret0, _ := ret[0].([][]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchPagedRequests indicates an expected call of BatchPagedRequests
func (mr *MockPaginatorMockRecorder) BatchPagedRequests(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchPagedRequests", reflect.TypeOf((*MockPaginator)(nil).BatchPagedRequests), arg0)
}
